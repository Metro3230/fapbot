from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from PIL import Image, ImageEnhance
import os

from config import TOKEN


bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
workdir = os.getcwd()

def add_to_log(val, path):                    #added value to log file if this value is not there 
    with open(path, 'r+') as file:
        file_set = set(line.strip() for line in file)
        if str(val) not in file_set:
            file.write(f'\n{val}')



@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∏ —è –ø–æ–¥—Ä–æ—á—É –Ω–∞ –Ω–µ—ë!")


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply("–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∏ —è –ø–æ–¥—Ä–æ—á—É –Ω–∞ –Ω–µ—ë!")
    
    
@dp.message_handler(commands=['id'])
async def send_welcome(message: types.Message):    
    await message.reply(message.chat.id)
  
    
@dp.message_handler()
async def echo_message(msg: types.Message):
    usrid = msg.from_user.id
    text = msg.text
    if(text == '–ö—Ä—ã—Å–∞' or text == '–∫—Ä—ã—Å–∞' or text == 'üêÄ'):
        await bot.send_message(usrid, '–Ω–µ—Ç')
    else:
        await bot.send_message(usrid, '–Ø –Ω–µ –¥—Ä–æ—á—É –Ω–∞ –±—É–∫–≤—ã!')
    add_to_log(usrid, workdir + '/log.txt')
    await bot.send_message(-931442766, f'Username: {msg.from_user.first_name}\nMsg: {text}\nId: {usrid}')   #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Ç–æ—Ä–æ–π —á—è—Ç


@dp.message_handler(content_types=["photo"])    
async def get_photo(message):
    usrid = message.from_user.id    
    caption = message.caption
    first_name = message.from_user.first_name
#    file_info = await bot.get_file(message.photo[-1].file_id)
    await message.photo[-1].download(destination_file=workdir + '/photo/send-' + message.photo[-1].file_unique_id + '.jpg')
    img = Image.open(workdir + '/photo/send-' + message.photo[-1].file_unique_id + '.jpg')
    hand = Image.open(workdir + '/photo/hand.png') 
    towidth = int(img.size[0])   #   –î–æ –∫–∞–∫–æ–π —à–∏—Ä–∏–Ω—ã —Ä–∞—Å—Ç—è–Ω—É—Ç—å —Ä—É–∫—É.  0 - width   1 - height
    hsize = int((float(hand.size[1])*float(towidth/float(hand.size[0]))))                       # –§–æ—Ä–º—É–ª–∞ –ø–æ–¥—Å—Ç—Ä–æ–π–∫–∏ –≤—ã—Å–æ—Ç—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ–π —à–∏—Ä–∏–Ω—ã
    hand = hand.resize((towidth,hsize), Image.Resampling.LANCZOS)                               #—Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ–º
    zeropoint = int(img.size[1]) - hsize                                                        #–Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ —Ä—É–∫–∏ (—á—Ç–æ –±—ã –æ–Ω–∞ –±—ã–ª–∞ –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É)
    img.paste(hand, (0, zeropoint),  hand)                                                      #–≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ
    img.save(workdir + '/photo/send-' + message.photo[-1].file_unique_id + '_hand.jpg')       #–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    await bot.send_photo(-931442766, message.photo[-1].file_id, caption=f'Username: {first_name}\nMsg: {caption}\nId: {usrid}')           #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–æ–π –¥—Ä—É–≥–æ–π —á—è—Ç
    await bot.send_photo(usrid, types.InputFile(workdir + '/photo/send-' + message.photo[-1].file_unique_id + '_hand.jpg'))   #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–µ 
    add_to_log(usrid, workdir + '/log.txt')
    os.remove(workdir + '/photo/send-' + message.photo[-1].file_unique_id + '_hand.jpg')     #—É–¥–∞–ª—è–µ–º
    os.remove(workdir + '/photo/send-' + message.photo[-1].file_unique_id + '.jpg')



if __name__ == '__main__':
    executor.start_polling(dp)
    




